/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        grave_nomod: grave_nomod {
            compatible = "zmk,behavior-macro";
            label = "GRAVE_NOMOD";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>;
        };
        login_macro: login_macro {
            compatible = "zmk,behavior-macro";
            label = "LOGIN_MACRO";
            #binding-cells = <0>;
            bindings = <&kp K &kp S &kp T &kp A &kp S &kp I &kp A &kp K>;
        };
        passw_macro: passw_macro {
            compatible = "zmk,behavior-macro";
            label = "PASSW_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LS(Z) &kp X &kp D &kp E &kp W &kp A &kp S &kp NUMBER_1 &kp NUMBER_2>;
        };
    };

    behaviors {
        m_caps: m_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "M_CAPS";
            bindings =
                <&lt 1 ESC>,
                <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        m_tab: m_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "M_TAB";
            bindings =
                <&kp TAB>,
                <&grave_nomod>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        j_alt_tab: j_alt_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "J_ALT_TAB";
            bindings =
                <&kp J>,
                <&kp TAB>;

            #binding-cells = <0>;
            keep-mods = <(MOD_RALT)>;
            mods = <(MOD_RALT)>;
        };
        k_alt_shift_tab: k_alt_shift_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "K_ALT_SHIFT_TAB";
            bindings =
                <&kp K>,
                <&kp LS(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
            keep-mods = <(MOD_RALT)>;
        };
        bt_next: bt_next {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_NEXT";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&none>,
                <&bt BT_NXT>;
        };
        bt_prev: bt_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_PREV";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&none>,
                <&bt BT_PRV>;
        };
        bt_clear: bt_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CLEAR";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&none>,
                <&none>,
                <&none>,
                <&bt BT_CLR>;
        };
        login_tap: login_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "LOGIN_TAP";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&login_macro>;
        };
        passw_tap: passw_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "PASSW_TAP";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&passw_macro>;
        };
        go_windows: go_windows {
            compatible = "zmk,behavior-tap-dance";
            label = "GO_WINDOWS";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&none>,
                <&tog 3>;
        };
        w_caps: w_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "W_CAPS";
            bindings =
                <&lt 4 ESCAPE>,
                <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        win_gui_when_ralt: win_gui_when_ralt {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_GUI_WHEN_RALT";
            bindings =
                <&kp BACKSPACE>,
                <&kp LEFT_GUI>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };
        go_mac: go_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "GO_MAC";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&none>,
                <&tog 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "mac";
            bindings = <
&m_tab     &kp Q  &kp W  &kp E             &kp R         &kp T        &kp Y                  &kp U       &kp I             &kp O    &kp P     &kp BSPC
&m_caps    &kp A  &kp S  &kp D             &kp F         &kp G        &kp H                  &j_alt_tab  &k_alt_shift_tab  &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V         &kp B        &kp N                  &kp M       &kp COMMA         &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LEFT_CONTROL  &kp LEFT_GUI  &kp SPACE    &mt RIGHT_SHIFT ENTER  &mo 2       &kp RALT
            >;
        };

        mac__caps {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "mac__caps";
            bindings = <
&trans          &trans     &trans    &kp LS(LC(TAB))  &kp LC(TAB)            &kp RS(RA(RC(RG(T))))    &kp LG(LEFT_ARROW)     &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)
&none           &trans     &trans    &trans           &kp RS(RA(RC(RG(F))))  &login_macro             &kp LEFT               &kp DOWN            &kp UP               &kp RIGHT            &kp C_VOLUME_UP       &kp C_BRI_UP
&kp LEFT_SHIFT  &bt_clear  &bt_prev  &bt_next         &go_windows            &passw_macro             &kp LA(BACKSPACE)      &kp BACKSPACE       &kp DELETE           &kp LA(DELETE)       &kp C_VOLUME_DOWN     &kp C_BRI_DN
                                     &kp LCTRL        &kp LGUI               &kp SPACE                &mt RIGHT_SHIFT ENTER  &trans              &kp RIGHT_ALT
            >;
        };

        mac__hold {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "mac__hold";
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET              &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK      &kp BSPC
&kp TILDE  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp EQUAL              &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &kp N6    &kp N7  &kp N8     &kp N9    &kp N0       &kp PLUS               &kp UNDER  &kp LESS_THAN         &kp GREATER_THAN       &kp BACKSLASH     &kp PIPE
                             &kp LCTRL  &kp LGUI  &kp SPACE    &mt RIGHT_SHIFT ENTER  &none      &kp RALT
            >;
        };

        ms {
            bindings = <
&m_tab     &kp Q  &kp W  &kp E             &kp R      &kp T        &kp Y                  &kp U       &kp I             &kp O    &kp P     &win_gui_when_ralt
&w_caps    &kp A  &kp S  &kp D             &kp F      &kp G        &kp H                  &j_alt_tab  &k_alt_shift_tab  &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V      &kp B        &kp N                  &kp M       &kp COMMA         &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LEFT_CONTROL  &kp LCTRL  &kp SPACE    &mt RIGHT_SHIFT ENTER  &mo 5       &kp RIGHT_ALT
            >;

            label = "ms";
        };

        ms__caps {
            bindings = <
&kp LA(LC(DELETE))  &trans     &trans    &kp LC(LS(TAB))  &kp LC(TAB)  &trans        &kp HOME               &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp END         &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)
&none               &trans     &trans    &trans           &trans       &login_tap    &kp LEFT               &kp DOWN            &kp UP               &kp RIGHT       &kp C_VOLUME_UP     &kp C_BRI_UP
&kp LSHFT           &bt_clear  &bt_prev  &bt_next         &go_mac      &passw_tap    &kp LC(BACKSPACE)      &kp BACKSPACE       &kp DELETE           &kp LC(DELETE)  &kp C_VOLUME_DOWN   &kp C_BRI_DN
                                         &kp LCTRL        &kp LCTRL    &kp SPACE     &mt RIGHT_SHIFT ENTER  &trans              &kp RIGHT_ALT
            >;

            label = "ms__caps";
        };

        ms__hold {
            bindings = <
&kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN  &kp POUND         &kp DOLLAR        &kp PERCENT    &kp CARET              &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK   &kp BSPC
&grave_nomod    &kp N1           &kp N2       &kp N3            &kp N4            &kp N5         &kp EQUAL              &kp MINUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LBKT       &kp RBKT
&kp LEFT_SHIFT  &kp N6           &kp N7       &kp N8            &kp N9            &kp N0         &kp PLUS               &kp UNDER      &kp LESS_THAN         &kp GREATER_THAN       &kp BACKSLASH  &kp PIPE
                                              &kp LEFT_CONTROL  &kp LEFT_CONTROL  &kp SPACE      &mt RIGHT_SHIFT ENTER  &none          &kp RIGHT_ALT
            >;

            label = "ms__hold";
        };
    };
};
