/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        grave_nomod: grave_nomod {
            compatible = "zmk,behavior-macro";
            label = "GRAVE_NOMOD";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>;
        };

        cmd_space_macro: cmd_space_macro {
            compatible = "zmk,behavior-macro";
            label = "CMD_SPACE_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>;
        };

        win_gui_macro: win_gui_macro {
            compatible = "zmk,behavior-macro";
            label = "WIN_GUI_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>;
        };
    };

    behaviors {
        m_caps: m_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "M_CAPS";
            bindings = <&lt 1 ESC>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        m_tab: m_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "M_TAB";
            bindings = <&kp TAB>, <&grave_nomod>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        j_alt_tab: j_alt_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "J_ALT_TAB";
            bindings = <&kp J>, <&kp LA(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        k_alt_shift_tab: k_alt_shift_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "K_ALT_SHIFT_TAB";
            bindings = <&kp K>, <&kp LS(LA(TAB))>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        bt_next: bt_next {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_NEXT";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&bt BT_NXT>;
        };

        bt_prev: bt_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_PREV";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&bt BT_PRV>;
        };

        bt_clear: bt_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CLEAR";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&none>, <&none>, <&bt BT_CLR>;
        };

        w_caps: w_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "W_CAPS";
            bindings = <&lt 0 ESCAPE>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mac_spotlight {
            bindings = <&kp LA(SPACE)>;
            key-positions = <41 35>;
            timeout-ms = <70>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        GNU {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "GNU";
            bindings = <
&m_tab     &kp Q  &kp W  &kp E             &kp R         &kp T        &kp Y                  &kp U       &kp I             &kp O    &kp P     &kp BACKSPACE
&m_caps    &kp A  &kp S  &kp D             &kp F         &kp G        &kp H                  &j_alt_tab  &k_alt_shift_tab  &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V         &kp B        &kp N                  &kp M       &kp COMMA         &kp DOT  &kp FSLH  &kp LEFT_GUI
                         &kp LEFT_CONTROL  &kp LEFT_ALT  &kp SPACE    &mt RIGHT_SHIFT ENTER  &mo 2       &kp RALT
            >;
        };

        L_CAPS {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "L_CAPS";
            bindings = <
&trans          &kp RS(RA(RC(RG(Q))))  &kp RS(RA(RC(RG(W))))  &kp LC(PAGE_UP)        &kp LC(PAGE_DOWN)      &kp RS(RA(RC(RG(T))))    &kp HOME               &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp END         &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)
&none           &kp RS(RA(RC(RG(A))))  &kp RS(RA(RC(RG(S))))  &kp RS(RA(RC(RG(D))))  &kp RS(RA(RC(RG(F))))  &none                    &kp LEFT               &kp DOWN            &kp UP               &kp RIGHT       &kp C_VOLUME_UP     &kp C_BRI_UP
&kp LEFT_SHIFT  &bt_clear              &bt_prev               &bt_next               &none                  &none                    &kp LC(BACKSPACE)      &kp BACKSPACE       &kp DELETE           &kp LC(DELETE)  &kp C_VOLUME_DOWN   &kp C_BRI_DN
                                                              &kp LCTRL              &kp LEFT_ALT           &kp SPACE                &mt RIGHT_SHIFT ENTER  &trans              &kp RIGHT_ALT
            >;
        };

        L_HOLD {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "L_HOLD";
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH   &kp DLLR      &kp PRCNT    &kp CARET              &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK      &kp BSPC
&kp TILDE  &kp N1    &kp N2  &kp N3     &kp N4        &kp N5       &kp EQUAL              &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &kp N6    &kp N7  &kp N8     &kp N9        &kp N0       &kp PLUS               &kp UNDER  &kp LESS_THAN         &kp GREATER_THAN       &kp BACKSLASH     &kp PIPE
                             &kp LCTRL  &kp LEFT_ALT  &kp SPACE    &mt RIGHT_SHIFT ENTER  &none      &kp RALT
            >;
        };
    };
};
